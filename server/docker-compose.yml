services:
  postgres:
    image: postgres:14-alpine
    ports:
      - 5428:5432
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}

    networks:
      - custom-net

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - ':6379'

    volumes:
      - ./redis/data:/data

    networks:
      - custom-net

  minio:
    image: quay.io/minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}

    volumes:
      - ./minio/data:/data

    command: server /data --console-address ":9001"

    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.xmrchats3.entrypoints=websecure
      - traefik.http.routers.xmrchats3.rule=Host(`s3.xmrchat.com`)
      - traefik.http.routers.xmrchats3.tls=true
      - traefik.http.routers.xmrchats3.tls.certresolver=myresolver
      - traefik.http.services.xmrchats3.loadbalancer.server.port=9000

    networks:
      - traefik
      - custom-net

  nest:
    build: .
    ports:
      - 3083:3000
    depends_on:
      - postgres
      - redis
      - minio
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.xmrchatnest.entrypoints=websecure
      - traefik.http.routers.xmrchatnest.rule=Host(`nest.xmrchat.com`)
      - traefik.http.routers.xmrchatnest.tls=true
      - traefik.http.routers.xmrchatnest.tls.certresolver=myresolver
      - traefik.http.services.xmrchatnest.loadbalancer.server.port=3000
    networks:
      traefik:
        aliases:
          - ${NEST_ALIAS:-nest}
      custom-net:

networks:
  custom-net:
  traefik:
    name: traefik
    external: true
